{"ast":null,"code":"import axios from 'axios';\n\nvar https = require('http');\n\nvar request = require('request');\n\nfunction addUser(_username, _email, _password) {\n  const data = JSON.stringify({\n    name: _username,\n    email: _email,\n    password: _password\n  });\n  const options = {\n    hostname: 'localhost',\n    port: 3002,\n    path: '/',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': data.length\n    }\n  };\n  const req = https.request(options, res => {\n    console.log(\"statusCode: \".concat(res.statusCode));\n    res.on('data', d => {\n      process.stdout.write(d);\n    });\n  });\n  req.on('error', error => {\n    console.error(error);\n  });\n  req.write(data);\n  req.end();\n}\n\nasync function findUser(_email, _password) {\n  const response = await axios.get(\"http://localhost:3002\").then(res => {\n    for (var i = 0; res.data[i] != null; i++) {\n      if (_email === res.data[i].email && _password === res.data[i].password) {\n        console.log(\"ok\");\n        console.log(res.data[i].name);\n        return res.data[i].name;\n      } else console.log(\"ko\");\n    }\n\n    return \"ko\";\n  });\n  if (response === \"ko\") console.log(\"pas ok\");\n  return response;\n}\n\nconst user = {\n  addUser,\n  findUser\n};\nexport default user;","map":{"version":3,"sources":["/home/BagoKu/Tek3/AppDev/DEV_dashboard_2019/dashboard/src/back/ConnectToApi.js"],"names":["axios","https","require","request","addUser","_username","_email","_password","data","JSON","stringify","name","email","password","options","hostname","port","path","method","headers","length","req","res","console","log","statusCode","on","d","process","stdout","write","error","end","findUser","response","get","then","i","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAGA,SAASE,OAAT,CAAiBC,SAAjB,EAA4BC,MAA5B,EAAoCC,SAApC,EAA+C;AAC3C,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,IAAAA,IAAI,EAAEN,SADkB;AAExBO,IAAAA,KAAK,EAAEN,MAFiB;AAGxBO,IAAAA,QAAQ,EAAEN;AAHc,GAAf,CAAb;AAMA,QAAMO,OAAO,GAAG;AACZC,IAAAA,QAAQ,EAAE,WADE;AAEZC,IAAAA,IAAI,EAAE,IAFM;AAGZC,IAAAA,IAAI,EAAE,GAHM;AAIZC,IAAAA,MAAM,EAAE,MAJI;AAKZC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,wBAAkBX,IAAI,CAACY;AAFlB;AALG,GAAhB;AAWA,QAAMC,GAAG,GAAGpB,KAAK,CAACE,OAAN,CAAcW,OAAd,EAAwBQ,GAAD,IAAS;AACxCC,IAAAA,OAAO,CAACC,GAAR,uBAA2BF,GAAG,CAACG,UAA/B;AAEAH,IAAAA,GAAG,CAACI,EAAJ,CAAO,MAAP,EAAgBC,CAAD,IAAO;AAClBC,MAAAA,OAAO,CAACC,MAAR,CAAeC,KAAf,CAAqBH,CAArB;AACH,KAFD;AAGH,GANW,CAAZ;AAQAN,EAAAA,GAAG,CAACK,EAAJ,CAAO,OAAP,EAAiBK,KAAD,IAAW;AACvBR,IAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACH,GAFD;AAIAV,EAAAA,GAAG,CAACS,KAAJ,CAAUtB,IAAV;AACAa,EAAAA,GAAG,CAACW,GAAJ;AAEH;;AAED,eAAeC,QAAf,CAAwB3B,MAAxB,EAAgCC,SAAhC,EAA2C;AACvC,QAAM2B,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAN,0BAClBC,IADkB,CACbd,GAAG,IAAI;AACT,SAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBf,GAAG,CAACd,IAAJ,CAAS6B,CAAT,KAAe,IAA/B,EAAqCA,CAAC,EAAtC,EAA0C;AACtC,UAAI/B,MAAM,KAAKgB,GAAG,CAACd,IAAJ,CAAS6B,CAAT,EAAYzB,KAAvB,IAAgCL,SAAS,KAAKe,GAAG,CAACd,IAAJ,CAAS6B,CAAT,EAAYxB,QAA9D,EAAwE;AACpEU,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACd,IAAJ,CAAS6B,CAAT,EAAY1B,IAAxB;AACA,eAAOW,GAAG,CAACd,IAAJ,CAAS6B,CAAT,EAAY1B,IAAnB;AACH,OAJD,MAKIY,OAAO,CAACC,GAAR,CAAY,IAAZ;AACP;;AACD,WAAO,IAAP;AACH,GAXkB,CAAvB;AAYA,MAAIU,QAAQ,KAAK,IAAjB,EACIX,OAAO,CAACC,GAAR,CAAY,QAAZ;AACJ,SAAOU,QAAP;AACH;;AAED,MAAMI,IAAI,GAAG;AACTlC,EAAAA,OADS;AACA6B,EAAAA;AADA,CAAb;AAIA,eAAeK,IAAf","sourcesContent":["import axios from 'axios';\nvar https = require('http');\nvar request = require('request');\n\n\nfunction addUser(_username, _email, _password) {\n    const data = JSON.stringify({\n        name: _username,\n        email: _email,\n        password: _password\n    });\n\n    const options = {\n        hostname: 'localhost',\n        port: 3002,\n        path: '/',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Content-Length': data.length\n        }\n    }\n\n    const req = https.request(options, (res) => {\n        console.log(`statusCode: ${res.statusCode}`);\n\n        res.on('data', (d) => {\n            process.stdout.write(d)\n        })\n    })\n\n    req.on('error', (error) => {\n        console.error(error)\n    })\n\n    req.write(data)\n    req.end()\n\n}\n\nasync function findUser(_email, _password) {\n    const response = await axios.get(`http://localhost:3002`)\n        .then(res => {\n            for (var i = 0; res.data[i] != null; i++) {\n                if (_email === res.data[i].email && _password === res.data[i].password) {\n                    console.log(\"ok\");\n                    console.log(res.data[i].name);\n                    return(res.data[i].name);\n                } else\n                    console.log(\"ko\");\n            }\n            return(\"ko\");\n        })\n    if (response === \"ko\")\n        console.log(\"pas ok\");\n    return(response);\n}\n\nconst user = {\n    addUser, findUser\n}\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}