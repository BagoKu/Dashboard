{"ast":null,"code":"import axios from 'axios';\n\nvar https = require('http');\n\nvar request = require('request');\n\nvar port = 8800;\n\nfunction addUser(_username, _email, _password) {\n  const data = JSON.stringify({\n    name: _username,\n    email: _email,\n    password: _password\n  });\n  const options = {\n    hostname: 'localhost',\n    port: port,\n    path: '/',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': data.length\n    }\n  };\n  const req = https.request(options, res => {\n    console.log(\"statusCode: \".concat(res.statusCode));\n    res.on('data', d => {\n      process.stdout.write(d);\n    });\n  });\n  req.on('error', error => {\n    console.error(error);\n  });\n  req.write(data);\n  req.end();\n}\n\nfunction addDashboard(_username, _dashboardName, _icon) {\n  const data = JSON.stringify({\n    username: _username,\n    dashboards: {\n      name: _dashboardName,\n      icon: _icon\n    }\n  });\n  const options = {\n    hostname: 'localhost',\n    port: port,\n    path: '/',\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': data.length\n    }\n  };\n  const req = https.request(options, res => {\n    console.log(\"statusCode: \".concat(res.statusCode));\n    res.on('data', d => {\n      process.stdout.write(d);\n    });\n  });\n  req.on('error', error => {\n    console.error(error);\n  });\n  req.write(data);\n  req.end();\n}\n\nasync function findUser(_email, _password) {\n  console.log(\"test2\");\n  const response = await axios.get(\"http://localhost:\" + port).then(res => {\n    console.log(\"test\");\n\n    for (var i = 0; res.data[i] != null; i++) {\n      if (_email === res.data[i].email && _password === res.data[i].password) {\n        console.log(\"ok\");\n        console.log(res.data[i].name);\n        return res.data[i].name;\n      } else console.log(\"ko\");\n    }\n\n    return \"ko\";\n  }).catch(error => console.log(error));\n  return response;\n}\n\nconst user = {\n  addUser,\n  findUser\n};\nexport default user;","map":{"version":3,"sources":["/front/src/ConnectToApi.js"],"names":["axios","https","require","request","port","addUser","_username","_email","_password","data","JSON","stringify","name","email","password","options","hostname","path","method","headers","length","req","res","console","log","statusCode","on","d","process","stdout","write","error","end","addDashboard","_dashboardName","_icon","username","dashboards","icon","findUser","response","get","then","i","catch","user"],"mappings":"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","sourcesContent":["import axios from 'axios';\nvar https = require('http');\nvar request = require('request');\n\n\nvar port = 8800\n\nfunction addUser(_username, _email, _password) {\n    const data = JSON.stringify({\n        name: _username,\n        email: _email,\n        password: _password\n    });\n\n    const options = {\n        hostname: 'localhost',\n        port: port,\n        path: '/',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Content-Length': data.length\n        }\n    }\n\n    const req = https.request(options, (res) => {\n        console.log(`statusCode: ${res.statusCode}`);\n\n        res.on('data', (d) => {\n            process.stdout.write(d)\n        })\n    })\n\n    req.on('error', (error) => {\n        console.error(error)\n    })\n\n    req.write(data)\n    req.end()\n\n}\n\nfunction addDashboard(_username, _dashboardName, _icon) {\n    const data = JSON.stringify({\n        username: _username,\n        dashboards: {\n            name: _dashboardName,\n            icon: _icon\n        }\n    });\n\n    const options = {\n        hostname: 'localhost',\n        port: port,\n        path: '/',\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            'Content-Length': data.length\n        }\n    }\n\n    const req = https.request(options, (res) => {\n        console.log(`statusCode: ${res.statusCode}`);\n\n        res.on('data', (d) => {\n            process.stdout.write(d)\n        })\n    })\n\n    req.on('error', (error) => {\n        console.error(error)\n    })\n\n    req.write(data)\n    req.end()\n}\n\nasync function findUser(_email, _password) {\n    console.log(\"test2\");\n    const response = await axios.get(`http://localhost:` + port)\n        .then(res => {\n            console.log(\"test\");\n            for (var i = 0; res.data[i] != null; i++) {\n                if (_email === res.data[i].email && _password === res.data[i].password) {\n                    console.log(\"ok\");\n                    console.log(res.data[i].name);\n                    return(res.data[i].name);\n                } else\n                    console.log(\"ko\");\n            }\n            return(\"ko\");\n        })\n        .catch(error => console.log(error))\n    return(response);\n}\n\nconst user = {\n    addUser, findUser\n}\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}